Set up the repository
    Install the yum-utils package (which provides the yum-config-manager utility) and set up the repository.
        yum install -y yum-utils
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

Install docker
    yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

Add docker user to group sudo
    usermod -aG docker $(whoami)

Setup deamon
    cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF

    mkdir -p /etc/systemd/system/docker.service.d

Restart docker
    systemctl enable docker.service
    systemctl daemon-reload
    systemctl restart docker

Turn off SELinux
    setenforce 0
    sed -i --follow-symlinks 's/^SELINUX=enforcing/SELINUX=disabled/' /etc/sysconfig/selinux

Turn off Firewall
    systemctl disable firewalld >/dev/null 2>&1
    systemctl stop firewalld

# sysctl
    cat >>/etc/sysctl.d/kubernetes.conf<<EOF
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1
    EOF
    sysctl --system >/dev/null 2>&1

# Tat swap
    sed -i '/swap/d' /etc/fstab
    swapoff -a 


# Add yum repo file for Kubernetes
    cat >>/etc/yum.repos.d/kubernetes.repo<<EOF
    [kubernetes]
    name=Kubernetes
    baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    enabled=1
    gpgcheck=1
    repo_gpgcheck=1
    gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    EOF

# Install Kubernetes
    yum install -y -q kubeadm kubelet kubectl
    systemctl enable kubelet
    systemctl start kubelet

# Configure NetworkManager before attempting to use Calico networking.
    cat >>/etc/NetworkManager/conf.d/calico.conf<<EOF
    [keyfile]
    unmanaged-devices=interface-name:cali*;interface-name:tunl*
    EOF